openapi: 3.0.1
info:
  title: User and Project Management API
  description: Xogito Project Management API
  version: 1.0.0
servers:
  - url: /xogito-assessment
    description: Development Server
paths:
  /api/v1/user/{id}:
    put:
      tags:
        - user-controller
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/project/{id}:
    put:
      tags:
        - project-controller
      operationId: updateProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - project-controller
      operationId: deleteProject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/user:
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/project:
    post:
      tags:
        - project-controller
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProjectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/project/assignUser:
    post:
      tags:
        - project-controller
      operationId: assignProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProjectAssignmentRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/v1/user/search:
    get:
      tags:
        - user-controller
      operationId: searchUser
      parameters:
        - name: createUserRequest
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/CreateUserRequest'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/user/retrieveUsers:
    get:
      tags:
        - user-controller
      operationId: retrieveUsers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
  /api/v1/project/search:
    get:
      tags:
        - project-controller
      operationId: searchProjects
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
  /api/v1/project/retrieveWithoutUsers:
    get:
      tags:
        - project-controller
      operationId: findProjectsWithoutAssignedusers
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectWithoutAssignedUsersResponse'
  /api/v1/project/retrieveWithoutUnAssignedUsers:
    get:
      tags:
        - project-controller
      operationId: findUnAssignedProjects
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProjectResponse'
components:
  schemas:
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    ApiResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
    UpdateProjectRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CreateUserRequest:
      required:
        - email
        - name
      type: object
      properties:
        name:
          type: string
        email:
          type: string
    CreateProjectRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UserProjectAssignmentRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
    PageUser:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/User'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Project:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        assignedUsers:
          type: array
          items:
            $ref: '#/components/schemas/User'
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        assignedProjects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    UserResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        users:
          $ref: '#/components/schemas/PageUser'
    PageProject:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProjectResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        projectList:
          $ref: '#/components/schemas/PageProject'
    PageProjectProjection:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProjectProjection'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        empty:
          type: boolean
    ProjectProjection:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          format: int64
        description:
          type: string
    ProjectWithoutAssignedUsersResponse:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int32
        projectList:
          $ref: '#/components/schemas/PageProjectProjection'
